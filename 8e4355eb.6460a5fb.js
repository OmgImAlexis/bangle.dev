(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{140:function(e,t,o){"use strict";o.d(t,"a",(function(){return p})),o.d(t,"b",(function(){return u}));var n=o(0),a=o.n(n);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function c(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?c(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var d=a.a.createContext({}),l=function(e){var t=a.a.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=l(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(o),h=n,u=p["".concat(c,".").concat(h)]||p[h]||b[h]||r;return o?a.a.createElement(u,i(i({ref:t},d),{},{components:o})):a.a.createElement(u,i({ref:t},d))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,c=new Array(r);c[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var d=2;d<r;d++)c[d]=o[d];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,o)}h.displayName="MDXCreateElement"},94:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return c})),o.d(t,"metadata",(function(){return i})),o.d(t,"rightToc",(function(){return s})),o.d(t,"default",(function(){return l}));var n=o(3),a=o(7),r=(o(0),o(140)),c={title:"How do I?",sidebar_label:"How do I?"},i={unversionedId:"guides/how-do-i",id:"guides/how-do-i",isDocsHomePage:!1,title:"How do I?",description:"In this page we answer a list of commonly asked things",source:"@site/docs/guides/how-do-i.md",slug:"/guides/how-do-i",permalink:"/bangle-play/docs/guides/how-do-i",editUrl:"https://github.com/kepta/bangle-play/edit/master/_bangle-website/docs/docs/guides/how-do-i.md",version:"current",sidebar_label:"How do I?",sidebar:"docs",previous:{title:"Keyboard shortcuts",permalink:"/bangle-play/docs/guides/keybindings"},next:{title:"Prosemirror",permalink:"/bangle-play/docs/advanced-guides/prosemirror"}},s=[{value:"How do I watch for changes to the editor?",id:"how-do-i-watch-for-changes-to-the-editor",children:[]},{value:"How do I handle editor&#39;s DOM events ?",id:"how-do-i-handle-editors-dom-events-",children:[]},{value:"How do I add a keyboard shortcut ?",id:"how-do-i-add-a-keyboard-shortcut-",children:[]},{value:"How do I execute a command ?",id:"how-do-i-execute-a-command-",children:[]},{value:"How do I get access to the <code>view</code>, <code>state</code>, <code>dispatch</code> for a command?",id:"how-do-i-get-access-to-the-view-state-dispatch-for-a-command",children:[]},{value:"How do I get access to Prosemirror schema ?",id:"how-do-i-get-access-to-prosemirror-schema-",children:[]},{value:"How do I change the selection ?",id:"how-do-i-change-the-selection-",children:[]},{value:"How do I programmatically update the doc content?",id:"how-do-i-programmatically-update-the-doc-content",children:[]},{value:"How do I create a new paragraph node ?",id:"how-do-i-create-a-new-paragraph-node-",children:[]}],d={rightToc:s};function l(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},d,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In this page we answer a list of commonly asked things"),Object(r.b)("h3",{id:"how-do-i-watch-for-changes-to-the-editor"},"How do I watch for changes to the editor?"),Object(r.b)("p",null,"Create a plugin that watches changes to the editor, see ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/examples/exporting-data"}),"exporting data")," for an example."),Object(r.b)("h3",{id:"how-do-i-handle-editors-dom-events-"},"How do I handle editor's DOM events ?"),Object(r.b)("p",null,"Create a plugin which listens to DOM events as show below:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"new Plugin({\n  key: new PluginKey('myDropPlugin'),\n  props: {\n    handleDOMEvents: {\n      drop(view, event) {\n        // your logic\n      },\n    },\n  },\n});\n")),Object(r.b)("p",null,"\ud83d\udca1 See ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://prosemirror.net/docs/ref/#view.EditorProps"}),"Prosemirror.EditorProps")," for the API."),Object(r.b)("h3",{id:"how-do-i-add-a-keyboard-shortcut-"},"How do I add a keyboard shortcut ?"),Object(r.b)("p",null,"\ud83d\udcd6 See {{global.link.KeybindingsGuide}}"),Object(r.b)("h3",{id:"how-do-i-execute-a-command-"},"How do I execute a command ?"),Object(r.b)("p",null,"If you are using the vanilla setup, you can get access to ",Object(r.b)("inlineCode",{parentName:"p"},"view")," from the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/core#bangleeditor"}),"editor")," instance. For example"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const editor =  new BangleEditor({ ... })\nconst view = editor.view\nconst state = view.state\nconst dispatch = view.dispatch\n\n// dry run a command\nconst success = toggleBold()(view.state);\n// execute the command\ntoggleBold()(view.state, view.dispatch, view);\n")),Object(r.b)("p",null,"In a React setup you can get the ",Object(r.b)("inlineCode",{parentName:"p"},"view")," from the hook ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/react#useeditorviewcontext-reacthook"}),"useEditorViewContext")," for components rendered inside the ",Object(r.b)("inlineCode",{parentName:"p"},"<BangleEditor />"),". For components\noutside ",Object(r.b)("inlineCode",{parentName:"p"},"<BangleEditor />"),", save the ",Object(r.b)("inlineCode",{parentName:"p"},"editor")," in your applications state management for retrieval and access. Don't forget to clean it up when you editor is destroyed."),Object(r.b)("h3",{id:"how-do-i-get-access-to-the-view-state-dispatch-for-a-command"},"How do I get access to the ",Object(r.b)("inlineCode",{parentName:"h3"},"view"),", ",Object(r.b)("inlineCode",{parentName:"h3"},"state"),", ",Object(r.b)("inlineCode",{parentName:"h3"},"dispatch")," for a command?"),Object(r.b)("p",null,"See ",Object(r.b)("inlineCode",{parentName:"p"},"### How do I execute a command ?")," above."),Object(r.b)("h3",{id:"how-do-i-get-access-to-prosemirror-schema-"},"How do I get access to Prosemirror schema ?"),Object(r.b)("p",null,"If you are using ",Object(r.b)("inlineCode",{parentName:"p"},"specs:[ ... ]")," notation, switch to using ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/core#specregistry"}),"SpecRegistry"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const specRegistry = new SpecRegistry([]);\nconst schema = specRegistry.schema;\n")),Object(r.b)("h3",{id:"how-do-i-change-the-selection-"},"How do I change the selection ?"),Object(r.b)("p",null,"First, you will need to figure out whether you want a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://prosemirror.net/docs/ref/#state.TextSelection"}),"TextSelection")," (majority of the cases) or a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://prosemirror.net/docs/ref/#state.NodeSelection"}),"NodeSelection"),". Below is an example of setting selection to the end:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const setSelectionAtEnd = (state, dispatch) => {\n  const textSelection = TextSelection.create(\n    state.doc,\n    state.doc.content.size - 1,\n  );\n  // doing this creates a new Transaction\n  const tr = state.tr;\n  // this convention allows for dry running of a command\n  if (dispatch) {\n    dispatch(tr.setSelection(textSelection));\n  }\n  // return the success of the command\n  return true;\n};\n")),Object(r.b)("h3",{id:"how-do-i-programmatically-update-the-doc-content"},"How do I programmatically update the doc content?"),Object(r.b)("p",null,"This is a pretty heavy question as this requires Prosemirror knowledge of dealing with ",Object(r.b)("inlineCode",{parentName:"p"},"transactions"),". To get started read up on"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Read the ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://prosemirror.net/docs/guide/#transform"}),"Prosemirror guide")," at least 3 times."),Object(r.b)("li",{parentName:"ul"},"Browse the source code of some of your favourite components to get a hang of\ncarrying out transactions."),Object(r.b)("li",{parentName:"ul"},"Checkout ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/atlassian/prosemirror-utils"}),"prosemirror-utils")," for more code examples.")),Object(r.b)("h3",{id:"how-do-i-create-a-new-paragraph-node-"},"How do I create a new paragraph node ?"),Object(r.b)("p",null,"Below is an example of how you can create a new paragraph node:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const { doc, schema, tr } = view.state;\nconst type = schema.nodes.paragraph;\n// Insert a paragraph node at the end of document.\nconst transaction = tr.insert(doc.content.size, type.create('Hello'));\n// Commit it.\nview.dispatch(transaction);\n")))}l.isMDXComponent=!0}}]);